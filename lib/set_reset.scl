FUNCTION "set_reset_rd" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      s : Bool;
      r : Bool;
   END_VAR

   VAR_IN_OUT 
      q : Bool;
   END_VAR


BEGIN
	// Set-reset (sd = reset dominant)
	
	IF #r THEN
	    #q := false;
	ELSIF #s THEN
	    #q := true;
	END_IF;
	
END_FUNCTION

FUNCTION "set_reset_sd" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      s : Bool;
      r : Bool;
   END_VAR

   VAR_IN_OUT 
      q : Bool;
   END_VAR


BEGIN
	// Set-reset (sd = reset dominant)
	
	IF #s THEN
	    #q := true;
	ELSIF #r THEN
	    #q := false;
	END_IF;
	
END_FUNCTION

FUNCTION "syncReal" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_IN_OUT 
      var1 : Real;   // primary
      var2 : Real;   // secoundary
      memory : Real;
   END_VAR


BEGIN
	// Make two variables have the same value. If one change, the
	// value will be transfer to the other one.
	
	IF #var1 = #memory THEN
	    #var1 := #var2;
	ELSE
	    #var2 := #var1;
	END_IF;
	
	#memory := #var2;
	
END_FUNCTION
